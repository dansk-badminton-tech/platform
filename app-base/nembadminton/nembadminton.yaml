apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nembadminton
  name: nembadminton
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nembadminton
  template:
    metadata:
      labels:
        app: nembadminton
    spec:
      volumes:
      - name: keypair
        secret:
          secretName: nembadminton-secret-files
          items:
          - key: oauth-private.key
            path: oauth-private.key
          - key: oauth-public.key
            path: oauth-public.key
      containers:
      - image: ghcr.io/dansk-badminton-tech/nembadminton:v0.3.15 # {"$imagepolicy": "nembadminton:nembadminton"}
        name: nembadminton-redis-worker
        args: ["php", "artisan", "horizon"]
        envFrom:
        - configMapRef:
            name: nembadminton-config
        - secretRef:
            name: nembadminton
        resources:
          requests:
            memory: "256Mi"
          limits:
            memory: "4Gi"
      - image: ghcr.io/dansk-badminton-tech/nembadminton:v0.3.15 # {"$imagepolicy": "nembadminton:nembadminton"}
        name: nembadminton-database-worker
        args: ["php", "artisan", "queue:work", "database"]
        envFrom:
        - configMapRef:
            name: nembadminton-config
        - secretRef:
            name: nembadminton
        resources:
          requests:
            memory: "256Mi"
          limits:
            memory: "2Gi"
      - image: ghcr.io/dansk-badminton-tech/nembadminton:v0.3.15 # {"$imagepolicy": "nembadminton:nembadminton"}
        name: nembadminton-web
        env:
        - name: APP_ENV
          value: local
        envFrom:
        - configMapRef:
            name: nembadminton-config
        - secretRef:
            name: nembadminton
        resources:
          requests:
            memory: "256Mi"
          limits:
            memory: "2Gi"
        volumeMounts:
        - name: keypair
          mountPath: "/opt/nembadminton"
          readOnly: true
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: nembadminton
spec:
  type: NodePort
  ports:
  - port: 80
    protocol: TCP
    nodePort: 30000
  selector:
    app: nembadminton
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: nembadminton-update-cache-cron
spec:
  schedule: '0 3 * * *'
  successfulJobsHistoryLimit: 5
  failedJobsHistoryLimit: 3
  jobTemplate:
    metadata:
      name: nembadminton-cron
    spec:
      backoffLimit: 0
      template:
        spec:
          containers:
          - image: ghcr.io/dansk-badminton-tech/nembadminton:v0.3.15 # {"$imagepolicy": "nembadminton:nembadminton"}
            name: nembadminton-cache-warm-up
            args: ["php", "artisan", "badmintonplayer-api:cache-warm-up"]
            envFrom:
            - configMapRef:
                name: nembadminton-config
            - secretRef:
                name: nembadminton
            resources:
              requests:
                memory: "256Mi"
              limits:
                memory: "2Gi"
          restartPolicy: OnFailure
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: nembadminton-update-clubs-cron
spec:
  schedule: '0 4 * * *'
  successfulJobsHistoryLimit: 5
  failedJobsHistoryLimit: 3
  jobTemplate:
    metadata:
      name: nembadminton-cron
    spec:
      backoffLimit: 0
      template:
        spec:
          containers:
          - image: ghcr.io/dansk-badminton-tech/nembadminton:v0.3.15 # {"$imagepolicy": "nembadminton:nembadminton"}
            name: nembadminton-update-all-clubs
            args: ["php", "artisan", "badmintonplayer-api-import:update-all-clubs"]
            envFrom:
            - configMapRef:
                name: nembadminton-config
            - secretRef:
                name: nembadminton
            resources:
              requests:
                memory: "256Mi"
              limits:
                memory: "2Gi"
          restartPolicy: OnFailure
